"""
#装饰器

def wrapper(func): #func=hopliday
    def inner(*args,**kwargs):
        print('在被装饰的函数执行之前做的事')
        ret = func(*args,**kwargs)
        print('在被装饰的函数执行之后做的事')
        return  ret
    return inner

@wrapper    #holiday = wrapper(holiday)
def holiday(day):
    print('全体放假%s天'%day)
    return '好开心'

ret = holiday(3)   #执行holiday实际上执行的是inner
print(ret)

#打印出
#在被装饰的函数执行之前做的事
#全体放假3天
#在被装饰的函数执行之后做的事
#好开心


#
def wahaha():
    '''
    一个打印哇哈哈的函数
    :return:
    '''
    print('哇哈哈')

print(wahaha.__name__) #查看字符串格式的函数名
print(wahaha.__doc__) #查看文档的注释
"""


#  装饰器进阶
from functools import wraps
def wrapper(func): #func=hopliday
    @wraps(func)
    def inner(*args,**kwargs):
        print('在被装饰的函数执行之前做的事')
        ret = func(*args,**kwargs)
        print('在被装饰的函数执行之后做的事')
        return  ret
    return inner

@wrapper    #holiday = wrapper(holiday)
def holiday(day):
    '''这是一个放假通知'''
    print('全体放假%s天'%day)
    return '好开心'

print(holiday.__name__)
print(holiday.__doc__)


ret = holiday(3)   #执行holiday实际上执行的是inner
print(ret)
"""
#编写装饰器，为多个函数加上认证的功能（用户的账号密码来源于文件）
#要求登陆成功一次，后续的函数都无需再输入用户名和密码。
FLAG = False
def login(func):
    def inner (*args,**kwargs):
        global FLAG
        '''登陆程序'''
        if FLAG:
            ret = func(*args,**kwargs)
            return ret
        else:
            username = input('username:')
            password = input('password:')
            if username =='boss_gold' and password == '22222':
                FLAG = True
                ret = func(*args,**kwargs)
                return ret
            else:
                print('登陆失败')
    return inner

@login
def shoplist_add():
    print('增加一件物品')

@login
def shoplist_del():
    print('删除一件物品')

shoplist_add()
shoplist_del()"""

# 编写一个装饰器，为多个函数加上记录调用功能，要求每次调用函数都将被调用的函数名称写入文件
def log(func):
    def inner(*args,**kwargs):
        with open('log','a',encoding='utf-8') as f:
            f.write(func.__name__+'\n')
        ret = func(*args,**kwargs)
        return ret
    return inner

@log
def shoplist_add():
    print('增加一件物品')

@log
def shoplist_del():
    print('删除一件物品')

shoplist_add()
shoplist_del()
